/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package application;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
/**
 *
 * @author Isurika
 */
public class Register extends javax.swing.JFrame {
    
    Connection conn;
    PreparedStatement prestmnt;
    Statement stm;
    ResultSet Reltset;
    String Username, Name, PhoneNumber, Password, rePassword, NameV, pnbV, UsnV, PwdV1, PwdV2;
    /**
     * Creates new form Register
     */
    //constructor
    public Register() {
        initComponents();
        this.setLocationRelativeTo(null);//window fit to center
        //database connection
        DbConnector connect = new DbConnector();
        conn = connect.dbConnect();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        pnb = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        usn = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        message = new javax.swing.JLabel();
        btnReg = new javax.swing.JButton();
        logo = new javax.swing.JLabel();
        pwd = new javax.swing.JPasswordField();
        repwd = new javax.swing.JPasswordField();
        lblName = new javax.swing.JLabel();
        lblUser = new javax.swing.JLabel();
        lblPnb1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblPwd2 = new javax.swing.JLabel();
        lblPwd1 = new javax.swing.JLabel();
        btnExit3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 153));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("CUSTOMER NAME");

        name.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nameKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("PHONE NUMBER");

        pnb.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        pnb.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pnbKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pnbKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("CREATE NEW USERNAME");

        usn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        usn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                usnKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                usnKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("PASSWORD");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("RETYPE YOUR PASSWORD");

        message.setForeground(new java.awt.Color(255, 0, 0));

        btnReg.setBackground(new java.awt.Color(0, 0, 0));
        btnReg.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btnReg.setForeground(new java.awt.Color(255, 255, 255));
        btnReg.setText("SIGN UP");
        btnReg.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegActionPerformed(evt);
            }
        });

        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/application/images/333 (1).png"))); // NOI18N

        pwd.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        pwd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pwdKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pwdKeyReleased(evt);
            }
        });

        repwd.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lblName.setForeground(new java.awt.Color(255, 0, 51));

        lblUser.setForeground(new java.awt.Color(255, 0, 0));

        lblPnb1.setForeground(new java.awt.Color(255, 0, 0));
        lblPnb1.setText("                                  ");
        lblPnb1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lblPnb1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lblPnb1KeyReleased(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(255, 255, 102));
        btnBack.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnBack.setText("<<");
        btnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblPwd2.setForeground(new java.awt.Color(255, 0, 0));

        lblPwd1.setForeground(new java.awt.Color(255, 0, 0));

        btnExit3.setBackground(new java.awt.Color(255, 206, 78));
        btnExit3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnExit3.setForeground(new java.awt.Color(0, 0, 0));
        btnExit3.setText("EXIT");
        btnExit3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExit3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExit3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(pnb, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblPwd1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblPwd2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                                        .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel6)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblPnb1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(name)
                                    .addComponent(usn)
                                    .addComponent(pwd)
                                    .addComponent(repwd)
                                    .addComponent(message, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblUser, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 77, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnBack)
                                .addGap(18, 18, 18)
                                .addComponent(btnReg, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnExit3)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(logo)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(logo)
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPnb1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnb, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(lblUser, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(lblPwd1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(lblPwd2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pwd, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(repwd, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(message, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReg, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExit3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegActionPerformed
        Name = (name.getText());
        PhoneNumber = (pnb.getText());
        Username = (usn.getText());
        Password = (pwd.getText());
        rePassword = (repwd.getText());

        NameV = lblName.getText();
        pnbV = lblPnb1.getText();
        UsnV = lblUser.getText();
        PwdV1 = lblPwd1.getText();
        PwdV2 = lblPwd2.getText();
        
        try{
            stm = conn.createStatement();//create statement
            
            //check wheather all fields are filled. if not it shows a message as "all fields are required"
            if(Name.isEmpty() || (PhoneNumber.isEmpty()) || (Username.isEmpty()) || (Password.isEmpty()) || (rePassword.isEmpty())){
                message.setText("All firlds are required !");
            }
            //if there is no invalid details it will insert the record to the customer table
            
            else if(NameV.isEmpty() && pnbV.isEmpty() && UsnV.isEmpty() && PwdV1.isEmpty() && PwdV2.isEmpty()){//check error messages
                if (Password.equals(rePassword)){//check whether password == repassword
                    
                    //insert values to the sustomer table
                    String sql = "Insert into CUSTOMER values ( '"+Username+"','"+Password+"','"+Name+"','"+PhoneNumber+"','true')";
                    
                    int c = 0;
                    c = stm.executeUpdate(sql);//execut eupdate sql
                    if (c>=1){
                        JOptionPane.showMessageDialog(null, "Record Inserted");
                    }
                    
                    //set all fields as empty
                    name.setText("");
                    pnb.setText("");
                    usn.setText("");
                    pwd.setText("");
                    repwd.setText(""); 
                    
                    
                    String order_status = "draft";
                    this.setVisible(false);
                    try {
                        //check for current place order record
                        String sql1 = "SELECT * FROM ORDERTABLE WHERE ADDRESS = '"+order_status+"'";//check for current place order record
                        prestmnt = conn.prepareStatement(sql1);
                        Reltset = prestmnt.executeQuery();//execute sql command

                        if (Reltset.next()){//if there is an order in draft
                            String sql2 = "SELECT * FROM customer WHERE username = '"+Username+"'";//checking the name of the logged user
                            prestmnt = conn.prepareStatement(sql2);
                            Reltset = prestmnt.executeQuery();//execute sql command
                            if (Reltset.next()) {
                                Name = Reltset.getString("NAME")+"  ";
                            }
                            Items.instance.lblex.setText(Name);
                            ConfirmOrder ov = new ConfirmOrder();
                            ov.setVisible(true);
                        }
                        else{//if there is no order in draft
                            String sql2 = "SELECT * FROM customer WHERE username = '"+Username+"'";//checking the name of the logged user
                            prestmnt = conn.prepareStatement(sql2);
                            Reltset = prestmnt.executeQuery();//execute sql command
                            String Name = null;
                            if (Reltset.next()) {
                                Name = Reltset.getString("NAME")+"  ";
                            }
                            WelcomePage.Instance.lbl.setText(Name);//set name of the user to welcome page curent user
                        }
                    } 
                    catch (SQLException ex) {
                         Logger.getLogger(FoodOrderingSystem.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                else{//if username or password doesn't match
                    message.setText("Password did not match");
                }
            }
            else{
                message.setText("Please follow instructions");
            }
        }
        catch(NullPointerException e){
            JOptionPane.showMessageDialog(rootPane,"Please connect your data base","output",1);
        } 
        catch (SQLException ex) {
            Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRegActionPerformed

    private void nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameKeyPressed
        // error message will be removed
        lblName.setText("");
        message.setText("");
    }//GEN-LAST:event_nameKeyPressed

    private void nameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameKeyReleased
        // name validation
        Name = name.getText();
        char[] c = Name.toCharArray();
        for(char c1 : c){
            if(Character.isDigit(c1)){
                lblName.setText("Enter a valid name");
                lblName.setHorizontalAlignment(SwingConstants.RIGHT);
                break;
            }
        }
    }//GEN-LAST:event_nameKeyReleased

    private void pnbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pnbKeyPressed
        //error message will be removed
        lblPnb1.setText("");
        message.setText("");
    }//GEN-LAST:event_pnbKeyPressed

    private void pnbKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pnbKeyReleased
        // phone number validation
        PhoneNumber = pnb.getText();
        char[] c = PhoneNumber.toCharArray();
        int num = 0;
        //phone number shouln't have any letters or special charactors
        //this will check for numbers
        for(char c1 : c){
            num++;
            if(!Character.isDigit(c1)){
                lblPnb1.setText("Phone number cannot contain characters");
                lblPnb1.setHorizontalAlignment(SwingConstants.RIGHT);
                break;
            }
            else if(num<10){
                lblPnb1.setText("Phone number must contain 10 digit");
                lblPnb1.setHorizontalAlignment(SwingConstants.RIGHT);
            }
            if(num>10){
                lblPnb1.setText("Please enter 10 digit phone number");
                lblPnb1.setHorizontalAlignment(SwingConstants.RIGHT);
            }
            else if (num == 10){
                lblPnb1.setText("");
            }
        }
        //phone number should have 10 numbers
        
    }//GEN-LAST:event_pnbKeyReleased

    private void usnKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usnKeyReleased
        // username validation (primary key - unique)
        try{
            Username = usn.getText();
            try {
                //check is there any existing username which equals to user entered username
                String sql = "SELECT * FROM CUSTOMER WHERE username = '"+Username+"'";

                prestmnt = conn.prepareStatement(sql);
                Reltset = prestmnt.executeQuery();

                if (Reltset.next()){
                    lblUser.setText("This username already exists");
                    lblUser.setHorizontalAlignment(SwingConstants.RIGHT);
                }            
            } 
            catch (SQLException ex) {
                 Logger.getLogger(FoodOrderingSystem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(rootPane,e,"output",1);
        } 
    }//GEN-LAST:event_usnKeyReleased

    private void usnKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usnKeyTyped
        // error message will be removed
        lblUser.setText("");
        message.setText("");
    }//GEN-LAST:event_usnKeyTyped

    private void lblPnb1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblPnb1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_lblPnb1KeyPressed

    private void lblPnb1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblPnb1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_lblPnb1KeyReleased

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // show login form
        this.setVisible(false);
        Login login = new Login();
        login.setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void pwdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pwdKeyPressed
        // error message will be removed
        lblPwd1.setText("");
        lblPwd2.setText("");
        message.setText("");
    }//GEN-LAST:event_pwdKeyPressed

    private void pwdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pwdKeyReleased
        // password validation
        int UpperCase, LowerCase, Digit, SPchar;
        UpperCase = 0;
        LowerCase = 0;
        Digit = 0;
        SPchar = 0;
        
        Password = pwd.getText();
        char[] c = Password.toCharArray();//creating char array
        if(Password.length()>=5){//password should have at least 5 charactors
            if(Password.length()>10){//password soul not have more than 10 charactors
                lblPwd2.setText("Please use maximum 10 charactors");
                lblPwd2.setHorizontalAlignment(SwingConstants.RIGHT);
            }
            for (char c1 : c){
                if(Character.isUpperCase(c1)){//check for uppercase letters
                    UpperCase++;
                }
                else if(Character.isLowerCase(c1)){//check for lowercase letters
                    LowerCase++;
                }
                if(Character.isDigit(c1)){//check for digits (numbers)
                    Digit++;
                }
                if(!Character.isLetter(c1) && !Character.isDigit(c1) && !Character.isWhitespace(c1)){//check for special charactors
                    SPchar++;
                }
            }
            if(!(UpperCase>0 && LowerCase>0 && Digit>0 && SPchar>0)){
                lblPwd1.setText("Please use uppercase letters, lowercase");
                lblPwd1.setHorizontalAlignment(SwingConstants.RIGHT);
                lblPwd2.setText("letters, digits and special characters");
                lblPwd2.setHorizontalAlignment(SwingConstants.RIGHT);
            }
        }
        else{
            lblPwd2.setText("Use at least 5 charactors");
            lblPwd2.setHorizontalAlignment(SwingConstants.RIGHT);
        }
    }//GEN-LAST:event_pwdKeyReleased

    private void btnExit3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExit3ActionPerformed
        FoodOrderingSystem cu = new FoodOrderingSystem();//create new FoodOrderingSystem class object
        cu.exitAndCancelOrder();
    }//GEN-LAST:event_btnExit3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        /*java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Register().setVisible(true);
            }
        });*/
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnExit3;
    private javax.swing.JButton btnReg;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPnb1;
    private javax.swing.JLabel lblPwd1;
    private javax.swing.JLabel lblPwd2;
    private javax.swing.JLabel lblUser;
    private javax.swing.JLabel logo;
    private javax.swing.JLabel message;
    private javax.swing.JTextField name;
    private javax.swing.JTextField pnb;
    private javax.swing.JPasswordField pwd;
    private javax.swing.JPasswordField repwd;
    private javax.swing.JTextField usn;
    // End of variables declaration//GEN-END:variables
}
